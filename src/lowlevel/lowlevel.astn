! "mrshl/schemaschema@0.1"
< {
    "type": < {
        "type": < 'state group' "string" {
            "string": < { } >
            "number": < { } >
            "boolean": < { } >
            "type argument": < {
                "argument": < 'value' "*type argument*" 'text' >
            } >
            "type reference": < {
                "type": < 'component' "type reference" >
            } >
            "tagged union": < {
                "options": < 'collection' {
                    "name": < 'value' "" 'text' >
                    "type": < 'component' "type" >
                } 'dictionary' "name" >
            } >
            "group": < {
                "properties": < 'collection' {
                    "name": < 'value' "" 'text' >
                    "occurence": < 'state group' "required" {
                        "required": < { } >
                        "optional": < { } >
                    } >
                    "type": < 'component' "type" >
                } 'dictionary' "name" >
            } >
            "dictionary": < {
                "entry": < 'component' "type" >
            } >
            "list": < {
                "element": < 'component' "type" >
            } >
        } >
    } >
    "optional namespace reference": < {
        "namespace": < 'state group' "current" {
            "current": < { } >
            "other": < {
                "namespace": < 'component' "namespace reference" >
            } >
        } >
    } >
    "namespace reference": < {
        "namespace": < 'value' "*namespace*" 'text' >
        "type arguments": < 'collection' {
            "name": < 'value' "" 'text' >
            "type": < 'value' "*type argument type*" 'text' >
        } 'dictionary' "name" >
    }>
    "type reference": < {
        "namespace": < 'component' "optional namespace reference" >
        "type": < 'value' "*type reference*" 'text' >
    }>
    "interface definition": < {
        "type": < 'state group' "group" {
            "group": < {
                "members": < 'collection' {
                    "name": < 'value' "" 'text' >
                    "definition": < 'component' "interface definition">
                } 'dictionary' "name" >
            } >
            "method": < {
                "type": < 'component' "type reference" >
                "return type": < 'state group' "void" {
                    "void": < { } >
                    "interface": < {
                        "interface": < 'component' "interface definition" >
                    } >
                } >
            } >
            "reference": < {
                "namespace": < 'component' "optional namespace reference" >
                "interface": < 'value' "*referenced interface*" 'text' >
            } >
        } >
    } >
    "procedure declaration": < {
        "return type": < 'state group' "void" {
            "void": < { } >
            "interface": < {
                "interface": < 'component' "interface definition" >
            } >
        } >
        "parameters": < 'collection' {
            "name": < 'value' "" 'text' >
            "type": < 'state group' "interface" {
                "dictionary": < {
                    "entry": < 'component' "interface definition" >
                } >
                "interface": < {
                    "interface": < 'component' "interface definition" >
                } >
                "builder": < {
                    "namespace": < 'component' "optional namespace reference">
                    "builder": < 'value' "*referenced builder*" 'text' >
                } >
                "function": < {
                    "in": < 'component' "type reference" >
                    "out": < 'component' "type reference" >
                } >
            }>
        } 'dictionary' "name" >
    } >
    //START OF IMPLEMENTATION TYPES
    "string initializer": < {
        "strategy": < 'state group' "literal" {
            "literal": < {
                "value": < 'value' "" 'text' >
            } >
            "from state": < {
                "state": < 'value' "*state*" 'text'>
            } >
            "from callback": < {
                "path": < 'value' "" 'text'>
            } >
            "from variable": < {
                "variable": < 'value' "*variable*" 'text' >
                "path": < 'value' "" 'text'>
            } >
        } > 
    } >
    "type initializer": < {
        "strategy": < 'state group' "literal" {
            "from state": < {
                "state": < 'value' "*state*" 'text'>
                "type": < 'state group' "string" {
                    "string": < {
                    } >
                    "number": < {
                    } >
                    "boolean": < {
                    } >
                    // "tagged union": < {
                    // } >
                    "dictionary": < {
                    } >
                    "list": < {
                    } >
                    // "group": < {
                    // } >
                    // "type argument": < {
                    // } >
                    // "type reference": < {
                    // } >
                } >
            } >
            "from callback": < {
                "path": < 'value' "" 'text'>
            } >
            "from variable": < {
                "variable": < 'value' "*variable*" 'text' >
                "path": < 'value' "" 'text'>
            } >
            "from function": < {
                "context": < 'state group' "argument" {
                    "argument": < { } >
                    "variable": < {
                        "variable": < 'value' "*variable*" 'text' >
                    } >
                } >
                "function": < 'value' "*function*" 'text'>
                "argument": < 'component' "type initializer">
            } >
            "literal": < {
                "type": < 'state group' "string" {
                    "string": < {
                        "value": < 'value' "" 'text' >
                    } >
                    "number": < {
                        "value": < 'value' "0" 'text' >
                    } >
                    "boolean": < {
                        "value": < 'value' "true" 'text' >
                    } >
                    "tagged union": < {
                        "option": < 'value' "*option*" 'text' >
                        "data": < 'component' "type initializer" >
                    } >
                    "dictionary": < {
                    } >
                    "list": < {
                    } >
                    "group": < {
                        "properties": < 'collection' {
                            "name": < 'value' "" 'text' >
                            "initializer": < 'component' "type initializer" >
                        } 'dictionary' "name" >
                    } >
                    "type argument": < {
                    } >
                    "type reference": < {
                        "initializer": < 'component' "type initializer" >
                    } >
                } >
            } >
        } >
    } >
    "internal procedure specification": < {
        "return type": < 'state group' "void" {
            "void": < { } >
            "interface": < {
                "interface": < 'component' "interface definition" >
            } >
        } >
        "parameters": < 'collection' {
            "name": < 'value' "" 'text' >
            "type": < 'state group' "group" {
                "group": < {
                    "members": < 'collection' {
                        "name": < 'value' "" 'text' >
                        "definition": < 'component' "interface definition">
                    } 'dictionary' "name" >
                } >
                "method": < {
                    "type": < 'component' "nested type reference" >
                    "return type": < 'state group' "void" {
                        "void": < { } >
                        "interface": < {
                            "interface": < 'component' "interface definition" >
                        } >
                    } >
                } >
                "reference": < {
                    "namespace": < 'component' "optional namespace reference" >
                    "interface": < 'value' "*referenced interface*" 'text' >
                } >
            } >
        } 'dictionary' "name" >
        "block": < 'component' "procedure block" >
    } >
    "interface initializer": < {
        "type": < 'state group' "method" {
            "method": < {
                "strategy": < 'state group' "procedure implementation" {
                    "argument": < {
                        "argument": < 'value' "*argument*" 'text' >
                    } >
                    "procedure implementation": < {
                        "block": < 'component' "procedure block" >
                    } >
                    "inline procedure": < {
                        "specification": < 'component' "internal procedure specification" >
                        "call": < 'component' "procedure call" >
                    } >
                } >
            } >
            "group": < {
                "strategy": < 'state group' "inline" {
                    "inline": < {
                        "members": < 'collection' {
                            "name": < 'value' "" 'text' >
                            "initializer": < 'component' "interface initializer" >
                        } 'dictionary' "name" >
                    } >
                } >
            } >
            "reference": < {
                "strategy": < 'state group' "procedure call6" {
                    "procedure call6": < {
                        "procedure call": < 'component' "named procedure call" >
                    } >
                } >
            } >
        }>
    } >
    "procedure call": < {
        "arguments": < 'collection' {
            "name": < 'value' "" 'text' >
            "type": < 'state group' "interface initializer" {
                "interface initializer": < {
                    "initializer": < 'component' "interface initializer" >
                } >
                "dictionary": < {
                    "entries": < 'collection' {
                        "name": < 'value' "" 'text' >
                        "initializer": < 'component' "interface initializer" >
                    } 'dictionary' "name" >
                } >
                "builder": < {
                    "argument": < 'value' "*argument*" 'text' >
                } >
            } >
        } 'dictionary' "name" >
    } >
    "named procedure call": < {
        "type": < 'state group' "local" {
            "local": < {
                "procedure": < 'value' "*procedure*" 'text' >
            } >
            "variable": < {
                "variable": < 'value' "*variable*" 'text' >
                "path": < 'value' "*path*" 'text' >
            } >
            "external": < {
                "builder": < 'value' "*builder*" 'text' >
                "method": < 'value' "*method*" 'text' >
            } >
        } >
        "procedure call": < 'component' "procedure call" >
    } >
    "nested type reference": < {
        "namespace": < 'component' "namespace reference" >
        "type": < 'value' "*type reference*" 'text' >
        "steps": < 'collection' {
            "type": < 'state group' "dictionary" {
                "group": < {
                    "property": < 'value' "*property*" 'text' >
                } >
                "dictionary": < {
                } >
                "list": < {
                } >
                "tagged union option": < {
                    "option": < 'value' "*option*" 'text' >
                } >
            } >
        } 'list'>
    } >
    "procedure block": < {
        "nested procedures": < 'collection' {
            "name": < 'value' "" 'text' >
            "specification": < 'component' "internal procedure specification" >
        } 'dictionary' "name" >
        "variables": < 'collection' {
            "name": < 'value' "" 'text' >
            "path": < 'value' "*path*" 'text' >
        } 'dictionary' "name" >
        "states": < 'collection' {
            "name": < 'value' "" 'text' >
            "type": < 'state group' "string" {
                "string": < {
                    "initial value": < 'value' "" 'text' >
                } >
                "dictionary": < {
                    "type": < 'component' "nested type reference">
                } >
                "list": < {
                    "type": < 'component' "nested type reference">
                } >
                "type5": < {
                    "nested type": < 'component' "nested type reference" >
                    "initializer": < 'component' "type initializer" >
                } >
            } >
        } 'dictionary' "name" >
        "effects": < 'collection' {
            "type": < 'state group' "interface call" {
                "interface call": < {
                    "interface": < 'value' "*interface*" 'text' >
                    "initializer": < 'component' "type initializer" >
                } >
                "state change": < {
                    "state": < 'value' "*state*" 'text' >
                    "type": < 'state group' "string" {
                        "string": < {
                            "initializer": < 'component' "string initializer" >
                        } >
                        "dictionary": < {
                            "strategy": < 'state group' "add entry" {
                                "add entry": < {
                                    "key": < 'component' "string initializer">
                                    "initializer": < 'component' "type initializer">
                                } >
                            } >
                        } >
                        "list": < {
                            "strategy": < 'state group' "add element" {
                                "add element": < {
                                    "initializer": < 'component' "type initializer">
                                } >
                            } >
                        } >
                    } >
                } >
            } >
        } 'list' >
        "return value": < 'state group' "void" {
            "void": < { } >
            "interface": < {
                "initializer": < 'component' "interface initializer" >
            } >
        } >
    } >
    "root": < {
        "namespaces": < 'collection' {
            "name": < 'value' "" 'text' >
            "type parameters": < 'collection' {
                "name": < 'value' "" 'text' >
            } 'dictionary' "name" >
            "types": < 'collection' {
                "name": < 'value' "" 'text' >
                "type": < 'component' "type" >
            } 'dictionary' "name" >
            "interfaces": < 'collection' {
                "name": < 'value' "" 'text' >
                "definition": < 'component' "interface definition" >
            } 'dictionary' "name" >
            "interface builders": < 'collection' {
                "name": < 'value' "" 'text' >
                "methods": < 'collection' {
                    "name": < 'value' "" 'text' >
                    "declaration": < 'component' "procedure declaration" >
                } 'dictionary' "name" >
            } 'dictionary' "name" >
            "procedure declarations": < 'collection' {
                "name": < 'value' "" 'text' >
                "declaration": < 'component' "procedure declaration" >
            } 'dictionary' "name" >
        } 'dictionary' "name" >
        "procedure implementations": < 'collection' {
            "name": < 'value' "" 'text' >
            "type parameters": < 'collection' {
                "name": < 'value' "" 'text' >
            } 'dictionary' "name" >
            "namespace": < 'component' "namespace reference" >
            "declaration": < 'value' "*procedure declaration*" 'text' >
            "block": < 'component' "procedure block" >
        } 'dictionary' "name" >
    } >
} "root" >